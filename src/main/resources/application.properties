# Configurar el puerto donde se expone la API REST
server.port=9080

##
## MYSQL
##
# Propiedades de conexion
spring.datasource.url=jdbc:mysql://localhost:4306/tpfinal22?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# Define como Hibernate manipulara el esquema de base de datos al inicio de la aplicacion
# none -> No manipula la base de datos (queda igual que como estaba, ideal para produccion)
# create -> Elimina y crea el esquema.
# create-drop -> Crea el esquema y lo destruye al cerrar el contexto (ideal para pruebas unitarias)
# validate -> Comprueba si el esquema coincide, caso contrario falla
# update -> Actualiza el esquema solo si es necesario, pero sin destruir los datos
spring.jpa.hibernate.ddl-auto=create

# Mostrar en la consola todas las SQL que se ejecutan
spring.jpa.show-sql=true

##
## MONGO
##
# Propiedades de conexion a MongoDB
# spring.data.mongodb.uri=mongodb://rsuser:pwd@localhost:27017/tpfinal
# spring.data.mongodb.port=27017
# spring.data.mongodb.username=user
# spring.data.mongodb.password=pwd
# spring.data.mongodb.database=tpfinal

application.testData.addAtStartup=true
application.testData.numOfBanks=10
application.testData.numOfPromotionsPerBank=15
application.testData.numOfStores=50
application.testData.numOfCardHolders=50
application.testData.maxNumOfCardsPerUser=3
application.testData.maxNumOfPurchasesPerCard=15
application.testData.minDate="01/01/2015"
application.testData.maxDate="31/12/2022"
application.testData.maxCardExpirationYears=3
